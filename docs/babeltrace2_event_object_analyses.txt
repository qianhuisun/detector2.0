提要: 
LTTng 记录的事件以CTF 格式存储. 
Babeltrace2 读取CTF 文件中的事件并转换成消息流(stream messages). 

目标: 
截取消息流, 解析消息对应的事件的参数. 

入口: 
bt_message *msg

对应事件的参数: 
1. 时间戳 (ns): 
    bt_message_event *event_msg = (void *)msg;
    变量1 cycles: event_msg->default_cs->value_cycles
    变量2 ns from origin: event_msg->default_cs->ns_from_origin
        ps:依据数据推测, 这两个变量都是event start time. 
           暂时没有在bt_message *msg 中找到event end time.

2. 事件名 (e.g. syscall_entry_write): 
    bt_event *event = msg->event;
    bt_event_class *ec = event->class;
    变量1 event name: ec->name.value

3. Common context (e.g. lttng add-context -k -t pid):
    bt_event *event = msg->event;
    bt_field *field = event->common_context_field;
    这里的field 是个集合(结构体/数组), 有若干个成员member field, 
    (a) member field 不再是集合: (e.g. pid = 4939)
        bt_field_class *fc = field->class;
        bt_field_class_named_field_class_container *fc = (void *)fc;
        bt_field_class_structure_member *member = fc->named_fcs->pdata[index];
        bt_named_field_class *named_fc = (const void *) member;
        变量1 context name: named_fc->name->str (e.g. pid)
        bt_field_structure *struct_field = (void *) field;
        bt_field *member_field = struct_field->fields->pdata[index];
        变量2 context value: member_field->value (e.g. 4939)
    (b) member field 还是集合: 
        继续迭代member field 的成员


4. Special context 
    解析与Common context 类似, 目前没用过这类参数
    bt_event *event = msg->event;
    bt_field *field = event->specific_context_field;

5. Payload: 
    解析与Common context 类似, 包含大多数参数
    bt_event *event = msg->event;
    bt_field *field = event->payload_field;
    这里的field 是个集合(结构体/数组), 有若干个成员member field, 
    (a) member field 不再是集合:
        bt_field_class *fc = field->class;
        bt_field_class_named_field_class_container *fc = (void *)fc;
        bt_field_class_structure_member *member = fc->named_fcs->pdata[index];
        bt_named_field_class *named_fc = (const void *) member;
        变量1 context name: named_fc->name->str
        bt_field_structure *struct_field = (void *) field;
        bt_field *member_field = struct_field->fields->pdata[index];
        变量2 context value: member_field->value
    (b) member field 还是集合: (e.g. v6addr = [ [0] = 0, [1] = 0, [2] = 0, [3] = 0, [4] = 0, [5] = 0, [6] = 0, [7] = 1 ]), (e.g. network_header = { { version = 4, ihl = 5, tos = 16, tot_len = 76, id = 0x6ADE, frag_off = 16384, ttl = 64, protocol = ( "_tcp" : container = 6 ), checksum = 0xB7AD, saddr_padding = { }, saddr = [ [0] = 10, [1] = 0, [2] = 2, [3] = 15 ], daddr_padding = { }, daddr = [ [0] = 10, [1] = 0, [2] = 2, [3] = 2 ], transport_header_type = ( "_tcp" : container = 1 ), transport_header = { { source_port = 22, dest_port = 39900, seq = 4011196926, ack_seq = 2364627811, data_offset = 5, reserved = 0, flags = 0x18, window_size = 63920, checksum = 0x184F, urg_ptr = 0 } } } })
        继续迭代member field 的成员
